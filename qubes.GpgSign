#!/usr/bin/python3 --
def main():
    import sys, os
    def fatal(*args, **kwargs):
        print(file=sys.stderr, *args, **kwargs)
        sys.exit(4)
    try:
        progname, untrusted_argument = sys.argv
    except ValueError:
        fatal('missing service argument')
    if len(untrusted_argument) != 40:
        fatal(f'Invalid length of service argument (expected 40, got {len(untrusted_argument)})')
    for untrusted_b in untrusted_argument:
        if not (('0' <= untrusted_b <= '9') or ('A' <= untrusted_b <= 'F')):
            # qrexec already sanitized service argument, so it is safe to display
            fatal(f'Invalid key fingerprint (bad character): {untrusted_argument}')
    untrusted_command_byte = os.read(0, 1)
    if untrusted_command_byte == b'a':
        argument = ('--armor',)
    elif untrusted_command_byte == b'b':
        argument = ()
    elif not untrusted_command_byte:
        fatal('No signature type selection byte (premature EOF)')
    else:
        fatal(f'Invalid signature type selection byte (expected 97 or 98, got {untrusted_command_byte[0]})')

    os.execvp('gpg2', (
        'gpg2',
        '--sign',
        '--batch',
        '--status-fd=2',
        '--exit-on-status-write-error',
        '--with-colons',
        '--detach-sign',
        *argument,
        f'--local-user={untrusted_argument}!'
    ))
if __name__ == '__main__':
    main()
